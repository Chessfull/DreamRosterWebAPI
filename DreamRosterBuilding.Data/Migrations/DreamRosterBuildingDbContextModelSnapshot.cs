// <auto-generated />
using System;
using DreamRosterBuilding.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DreamRosterBuilding.Data.Migrations
{
    [DbContext(typeof(DreamRosterBuildingDbContext))]
    partial class DreamRosterBuildingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.FlagEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Flags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(577),
                            ImagePath = "images/flags/Flag_of_Turkey.png",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(586),
                            Name = "Turkiye"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(588),
                            ImagePath = "images/flags/Flag_of_Spain.png",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(589),
                            Name = "Spain"
                        });
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.IconEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HairColor")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Skin")
                        .HasColumnType("int");

                    b.Property<int?>("Tattoo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Icons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(1817),
                            HairColor = 0,
                            ImagePath = "images/icons/icon-default.png",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(1819),
                            Name = "BlackHairMediumSkinNoTattoo",
                            Skin = 1
                        });
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.LeagueEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NationId");

                    b.ToTable("Leagues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(3641),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(3643),
                            Name = "Süper Lig",
                            NationId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(3645),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(3646),
                            Name = "LaLiga",
                            NationId = 2
                        });
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.NationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FlagId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FlagId")
                        .IsUnique();

                    b.ToTable("Nations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(6206),
                            FlagId = 1,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(6209),
                            Name = "Türkiye"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(6211),
                            FlagId = 2,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(6212),
                            Name = "Spain"
                        });
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.PlayerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HairColor")
                        .HasColumnType("int");

                    b.Property<int>("IconId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("NationId")
                        .HasColumnType("int");

                    b.Property<int>("Skin")
                        .HasColumnType("int");

                    b.Property<int?>("Tattoo")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IconId");

                    b.HasIndex("LeagueId");

                    b.HasIndex("NationId");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8192),
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8198),
                            CreatedUser = "admin",
                            HairColor = 0,
                            IconId = 1,
                            IsDeleted = false,
                            LeagueId = 2,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8198),
                            ModifiedUser = "admin",
                            Name = "Mert Topcu",
                            NationId = 2,
                            Skin = 1,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8201),
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8202),
                            CreatedUser = "admin",
                            HairColor = 0,
                            IconId = 1,
                            IsDeleted = false,
                            LeagueId = 2,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8203),
                            ModifiedUser = "admin",
                            Name = "Roberto Carlos",
                            NationId = 2,
                            Skin = 1,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8204),
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8205),
                            CreatedUser = "admin",
                            HairColor = 0,
                            IconId = 1,
                            IsDeleted = false,
                            LeagueId = 2,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8206),
                            ModifiedUser = "admin",
                            Name = "Paulo Maldini",
                            NationId = 2,
                            Skin = 1,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8207),
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8208),
                            CreatedUser = "admin",
                            HairColor = 0,
                            IconId = 1,
                            IsDeleted = false,
                            LeagueId = 2,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8208),
                            ModifiedUser = "admin",
                            Name = "Lucio",
                            NationId = 2,
                            Skin = 1,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8209),
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8210),
                            CreatedUser = "admin",
                            HairColor = 0,
                            IconId = 1,
                            IsDeleted = false,
                            LeagueId = 2,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8211),
                            ModifiedUser = "admin",
                            Name = "Cafu",
                            NationId = 2,
                            Skin = 1,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8212),
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8213),
                            CreatedUser = "admin",
                            HairColor = 0,
                            IconId = 1,
                            IsDeleted = false,
                            LeagueId = 2,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8213),
                            ModifiedUser = "admin",
                            Name = "Stevan Gerrard",
                            NationId = 2,
                            Skin = 1,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8214),
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8215),
                            CreatedUser = "admin",
                            HairColor = 0,
                            IconId = 1,
                            IsDeleted = false,
                            LeagueId = 2,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8216),
                            ModifiedUser = "admin",
                            Name = "Philip Lahm",
                            NationId = 2,
                            Skin = 1,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8217),
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8218),
                            CreatedUser = "admin",
                            HairColor = 0,
                            IconId = 1,
                            IsDeleted = false,
                            LeagueId = 2,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8218),
                            ModifiedUser = "admin",
                            Name = "Ronaldinho",
                            NationId = 2,
                            Skin = 1,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8219),
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8220),
                            CreatedUser = "admin",
                            HairColor = 0,
                            IconId = 1,
                            IsDeleted = false,
                            LeagueId = 2,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8221),
                            ModifiedUser = "admin",
                            Name = "Cristiana Ronaldo",
                            NationId = 2,
                            Skin = 1,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8222),
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8223),
                            CreatedUser = "admin",
                            HairColor = 0,
                            IconId = 1,
                            IsDeleted = false,
                            LeagueId = 2,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8223),
                            ModifiedUser = "admin",
                            Name = "Lionel Messi",
                            NationId = 2,
                            Skin = 1,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 11,
                            BirthDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8224),
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8225),
                            CreatedUser = "admin",
                            HairColor = 0,
                            IconId = 1,
                            IsDeleted = false,
                            LeagueId = 2,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(8226),
                            ModifiedUser = "admin",
                            Name = "Ronaldo Nazario",
                            NationId = 2,
                            Skin = 1,
                            TeamId = 4
                        });
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.PlayerPositionEntity", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PlayerId", "PositionId");

                    b.HasIndex("PositionId");

                    b.ToTable("PlayerPositions");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            PositionId = 1,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9824),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9827)
                        },
                        new
                        {
                            PlayerId = 2,
                            PositionId = 2,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9829),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9829)
                        },
                        new
                        {
                            PlayerId = 3,
                            PositionId = 3,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9831),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9831)
                        },
                        new
                        {
                            PlayerId = 4,
                            PositionId = 4,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9832),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9833)
                        },
                        new
                        {
                            PlayerId = 5,
                            PositionId = 5,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9834),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9834)
                        },
                        new
                        {
                            PlayerId = 6,
                            PositionId = 6,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9835),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9835)
                        },
                        new
                        {
                            PlayerId = 7,
                            PositionId = 7,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9836),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9837)
                        },
                        new
                        {
                            PlayerId = 8,
                            PositionId = 8,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9838),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9838)
                        },
                        new
                        {
                            PlayerId = 9,
                            PositionId = 9,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9839),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9839)
                        },
                        new
                        {
                            PlayerId = 10,
                            PositionId = 10,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9840),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9841)
                        },
                        new
                        {
                            PlayerId = 11,
                            PositionId = 11,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9842),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 749, DateTimeKind.Local).AddTicks(9842)
                        });
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.PlayerSkillEntity", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PlayerId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("PlayerSkills");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            SkillId = 1,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(2598),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(2601)
                        });
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.PositionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4962),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4964),
                            Name = "GK"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4966),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4967),
                            Name = "LB"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4968),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4968),
                            Name = "LCB"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4970),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4970),
                            Name = "RCB"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4971),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4971),
                            Name = "RB"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4972),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4973),
                            Name = "MOL"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4974),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4974),
                            Name = "MOR"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4975),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4975),
                            Name = "MOO"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4977),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(4977),
                            Name = "LF"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(5012),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(5013),
                            Name = "RF"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(5014),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(5014),
                            Name = "ST"
                        });
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.SettingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("MaintenanceMood")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MaintenanceMood = false,
                            Name = "Maintenance"
                        });
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.SkillEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(6103),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(6105),
                            Name = "Keeping"
                        });
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.TeamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.HasIndex("NationId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(7239),
                            CreatedUser = "admin",
                            Image = "images/teams/Fenerbahce.png",
                            IsDeleted = false,
                            LeagueId = 1,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(7242),
                            ModifiedUser = "admin",
                            Name = "Fenerbahçe",
                            NationId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(7245),
                            CreatedUser = "admin",
                            Image = "images/teams/Galatasaray.png",
                            IsDeleted = false,
                            LeagueId = 1,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(7245),
                            ModifiedUser = "admin",
                            Name = "Galatasaray",
                            NationId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(7247),
                            CreatedUser = "admin",
                            Image = "images/teams/Real_Madrid.png",
                            IsDeleted = false,
                            LeagueId = 2,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(7248),
                            ModifiedUser = "admin",
                            Name = "Real Madrid",
                            NationId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(7249),
                            CreatedUser = "admin",
                            Image = "images/teams/Barcelona.png",
                            IsDeleted = false,
                            LeagueId = 2,
                            ModifiedDate = new DateTime(2024, 11, 4, 13, 44, 51, 750, DateTimeKind.Local).AddTicks(7250),
                            ModifiedUser = "admin",
                            Name = "Barcelona",
                            NationId = 2
                        });
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.LeagueEntity", b =>
                {
                    b.HasOne("DreamRosterBuilding.Data.Entities.NationEntity", "Nation")
                        .WithMany("Leagues")
                        .HasForeignKey("NationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nation");
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.NationEntity", b =>
                {
                    b.HasOne("DreamRosterBuilding.Data.Entities.FlagEntity", "Flag")
                        .WithOne("Nation")
                        .HasForeignKey("DreamRosterBuilding.Data.Entities.NationEntity", "FlagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flag");
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.PlayerEntity", b =>
                {
                    b.HasOne("DreamRosterBuilding.Data.Entities.IconEntity", "Icon")
                        .WithMany("Players")
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DreamRosterBuilding.Data.Entities.LeagueEntity", "League")
                        .WithMany("Players")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DreamRosterBuilding.Data.Entities.NationEntity", "Nation")
                        .WithMany("Players")
                        .HasForeignKey("NationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DreamRosterBuilding.Data.Entities.TeamEntity", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Icon");

                    b.Navigation("League");

                    b.Navigation("Nation");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.PlayerPositionEntity", b =>
                {
                    b.HasOne("DreamRosterBuilding.Data.Entities.PlayerEntity", "Player")
                        .WithMany("PlayerPositions")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamRosterBuilding.Data.Entities.PositionEntity", "Position")
                        .WithMany("PlayerPositions")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.PlayerSkillEntity", b =>
                {
                    b.HasOne("DreamRosterBuilding.Data.Entities.PlayerEntity", "Player")
                        .WithMany("PlayerSkills")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamRosterBuilding.Data.Entities.SkillEntity", "Skill")
                        .WithMany("PlayerSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.TeamEntity", b =>
                {
                    b.HasOne("DreamRosterBuilding.Data.Entities.LeagueEntity", "League")
                        .WithMany("Teams")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DreamRosterBuilding.Data.Entities.NationEntity", "Nation")
                        .WithMany("Teams")
                        .HasForeignKey("NationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("League");

                    b.Navigation("Nation");
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.FlagEntity", b =>
                {
                    b.Navigation("Nation")
                        .IsRequired();
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.IconEntity", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.LeagueEntity", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.NationEntity", b =>
                {
                    b.Navigation("Leagues");

                    b.Navigation("Players");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.PlayerEntity", b =>
                {
                    b.Navigation("PlayerPositions");

                    b.Navigation("PlayerSkills");
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.PositionEntity", b =>
                {
                    b.Navigation("PlayerPositions");
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.SkillEntity", b =>
                {
                    b.Navigation("PlayerSkills");
                });

            modelBuilder.Entity("DreamRosterBuilding.Data.Entities.TeamEntity", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
